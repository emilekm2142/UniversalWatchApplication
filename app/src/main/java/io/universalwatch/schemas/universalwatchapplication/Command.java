// automatically generated by the FlatBuffers compiler, do not modify

package io.universalwatch.schemas.universalwatchapplication;

import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.Table;

import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class Command extends Table {
    public static Command getRootAsCommand(ByteBuffer _bb) {
        return getRootAsCommand(_bb, new Command());
    }

    public static Command getRootAsCommand(ByteBuffer _bb, Command obj) {
        _bb.order(ByteOrder.LITTLE_ENDIAN);
        return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb));
    }

    public static int createCommand(FlatBufferBuilder builder,
                                    int id,
                                    int nameOffset) {
        builder.startObject(2);
        Command.addName(builder, nameOffset);
        Command.addId(builder, id);
        return Command.endCommand(builder);
    }

    public static void startCommand(FlatBufferBuilder builder) {
        builder.startObject(2);
    }

    public static void addId(FlatBufferBuilder builder, int id) {
        builder.addInt(0, id, 0);
    }

    public static void addName(FlatBufferBuilder builder, int nameOffset) {
        builder.addOffset(1, nameOffset, 0);
    }

    public static int endCommand(FlatBufferBuilder builder) {
        int o = builder.endObject();
        return o;
    }

    public void __init(int _i, ByteBuffer _bb) {
        bb_pos = _i;
        bb = _bb;
    }

    public Command __assign(int _i, ByteBuffer _bb) {
        __init(_i, _bb);
        return this;
    }

    public int id() {
        int o = __offset(4);
        return o != 0 ? bb.getInt(o + bb_pos) : 0;
    }

    public String name() {
        int o = __offset(6);
        return o != 0 ? __string(o + bb_pos) : null;
    }

    public ByteBuffer nameAsByteBuffer() {
        return __vector_as_bytebuffer(6, 1);
    }

    public ByteBuffer nameInByteBuffer(ByteBuffer _bb) {
        return __vector_in_bytebuffer(_bb, 6, 1);
    }
}

